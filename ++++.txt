EmbeddingBackwardKernel.cu	__cuda_sm3x_div_rn_noftz_f32
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned int, 1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned int>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
ReduceNormKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<c10::complex<double>, at::native::AbsMinOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::AbsMinOps<c10::complex<double>, double>, unsigned int, double, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<double, at::native::MinOps<double>, unsigned int, double, 4> >(at::native::ReduceOp<double, at::native::MinOps<double>, unsigned int, double, 4>)
ReduceSumProdKernel.cu	void at::native::reduce_kernel<128, 4, at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::prod_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::prod_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_backward<double, double, int, 2>(at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, int, int)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IGammaKernel.cu	__cuda_sm3x_div_rn_noftz_f32
ReduceMomentKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<double, at::native::WelfordOps<double, double, int, float, thrust::pair<double, double> >, unsigned int, double, 2> >(at::native::ReduceOp<double, at::native::WelfordOps<double, double, int, float, thrust::pair<double, double> >, unsigned int, double, 2>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::Half, at::native::ArgMaxOps<float>, unsigned int, long, 4> >(at::native::ReduceOp<c10::Half, at::native::ArgMaxOps<float>, unsigned int, long, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
PowKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::ArgMaxOps<long>, unsigned int, long, 4> >(at::native::ReduceOp<long, at::native::ArgMaxOps<long>, unsigned int, long, 4>)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<double, double, long, 2>(at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, long, long)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast)
IGammaKernel.cu	float (anonymous namespace)::calc_igammac<float>(float, float)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned long>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<int, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ComplexKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned int, 1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned int>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#1}, long, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned long>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#1})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
DistributionCauchyKernel.cu	_ZN2at6native56_GLOBAL__N__32_DistributionCauchyKernel_cpp1_ii_3a9ae88243distribution_elementwise_grid_stride_kernelIdLi2EZNS0_9templates4cuda21uniform_and_transformIddLm4EPNS_17CUDAGeneratorImplEZZZNS4_13cauchy_kernelIS7_EEvRNS_14TensorIteratorEddT_ENKUlvE_clEvENKUlvE0_clEvEUldE_EEvSA_T2_T3_EUlP24curandStatePhilox4_32_10E_ZNS1_27distribution_nullary_kernelIddLi2ES7_SJ_SE_EEvSA_SF_RKSG_T4_EUlidE0_EEviNS_15PhiloxCudaStateET1_SF_
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned int, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned int>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
Normalization.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned int, 1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned int>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
RangeFactories.cu	void (anonymous namespace)::elementwise_kernel_with_index<long, at::native::logspace_cuda_out(at::Tensor&, c10::Scalar, c10::Scalar, c10::optional<long>, double)::{lambda()#3}::operator()() const::{lambda()#8}::operator()() const::{lambda(long)#1}>(long, at::native::logspace_cuda_out(at::Tensor&, c10::Scalar, c10::Scalar, c10::optional<long>, double)::{lambda()#3}::operator()() const::{lambda()#8}::operator()() const::{lambda(long)#1}, function_traits<{lambda(long)#1}>::result_type*)
ReduceNormKernel.cu	__internal_accurate_pow
ForeachBinaryOpScalarList.cu	__cuda_sm3x_div_rn_noftz_f32
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#1}, short, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned long>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#1})
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_backward_kernel<float, long>(long, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned int, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned int>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned int, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned int, -1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned int>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MinOps<float>, unsigned int, float, 4> >(at::native::ReduceOp<float, at::native::MinOps<float>, unsigned int, float, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned long>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_forward<double, double, long, 2>(at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, long, long)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Exp<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Exp<c10::complex<float> >)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
NaiveConvolutionTranspose2d.cu	void at::native::col2im_kernel<float, float>(long, float const*, long, long, long, long, long, long, long, long, long, long, long, long, long, float*)
PowKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned int, 1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned int>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_backward_kernel<double, int>(int, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned int, 1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Asin<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Asin<c10::complex<float> >)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 2, 1, 1>, at::native::Cos<float> >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 2, 1, 1>, at::native::Cos<float>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<signed char, at::native::MaxOps<signed char>, unsigned int, signed char, 4> >(at::native::ReduceOp<signed char, at::native::MaxOps<signed char>, unsigned int, signed char, 4>)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#1}, bool, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned long>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<int, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#1})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned long>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<int, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_forward<double, double, long, 1>(at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, long, long)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::BFloat16, 1, 1, 0>, at::native::Cos<float> >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::BFloat16, 1, 1, 0>, at::native::Cos<float>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned int, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned int>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast>(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
AdaptiveMaxPooling2d.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ForeachUnaryOp.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
NaiveDilatedConvolution.cu	void at::native::col2im_kernel<float, float>(long, float const*, long, long, long, long, long, long, long, long, long, long, long, long, long, float*)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#1}, unsigned char, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned long>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<int, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#1})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<short, at::native::ArgMaxOps<short>, unsigned int, long, 4> >(at::native::ReduceOp<short, at::native::ArgMaxOps<short>, unsigned int, long, 4>)
ReduceMomentKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<double, at::native::WelfordOps<double, double, int, float, thrust::pair<double, double> >, unsigned int, double, 2> >(at::native::ReduceOp<double, at::native::WelfordOps<double, double, int, float, thrust::pair<double, double> >, unsigned int, double, 2>)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned int, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 1, 1, 0>, at::native::Tan<float> >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 1, 1, 0>, at::native::Tan<float>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned long>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Cosh<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Cosh<c10::complex<double> >)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned int, 2, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned int>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned int, 2, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned int>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UpSampleTrilinear3d.cu	void at::native::(anonymous namespace)::upsample_trilinear3d_backward_out_frame<c10::Half, float>(int, float, float, float, bool, at::GenericPackedTensorAccessor<c10::Half, 5ul, at::DefaultPtrTraits, long>, at::GenericPackedTensorAccessor<c10::Half, 5ul, at::DefaultPtrTraits, long>, c10::Half*)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 2, 1, 1>, at::native::Sin<float> >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 2, 1, 1>, at::native::Sin<float>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned long, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned long>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned int, 2, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned int>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Exp<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Exp<c10::complex<double> >)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4>, OffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast>(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4>, OffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
DistributionCauchyKernel.cu	_ZN2at6native56_GLOBAL__N__32_DistributionCauchyKernel_cpp1_ii_3a9ae88243distribution_elementwise_grid_stride_kernelIdLi4EZNS0_9templates4cuda21uniform_and_transformIddLm4EPNS_17CUDAGeneratorImplEZZZNS4_13cauchy_kernelIS7_EEvRNS_14TensorIteratorEddT_ENKUlvE_clEvENKUlvE0_clEvEUldE_EEvSA_T2_T3_EUlP24curandStatePhilox4_32_10E0_ZNS1_27distribution_nullary_kernelIddLi4ES7_SJ_SE_EEvSA_SF_RKSG_T4_EUlidE0_EEviNS_15PhiloxCudaStateET1_SF_
EmbeddingBag.cu	__cuda_sm3x_div_rn_noftz_f32
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned int, 2, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned int>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 1, 1, 0>, at::native::Sin<double> >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 1, 1, 0>, at::native::Sin<double>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#1}, float, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned long>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#1})
PowKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4>, TrivialOffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast>(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4>, TrivialOffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast)
UnarySignKernels.cu	__cuda_sm3x_div_rn_noftz_f32
Activation.cu	__cuda_sm3x_div_rn_noftz_f32
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned int, 1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned int>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
AveragePool3d.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<signed char, at::native::MinOps<signed char>, unsigned int, signed char, 4> >(at::native::ReduceOp<signed char, at::native::MinOps<signed char>, unsigned int, signed char, 4>)
DistributionCauchyKernel.cu	__internal_trig_reduction_slowpathd
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Atan<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Atan<c10::complex<double> >)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<double, at::native::MinOps<double>, unsigned int, double, 4> >(at::native::ReduceOp<double, at::native::MinOps<double>, unsigned int, double, 4>)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<c10::Half, float, long, 1>(at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, long, long)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#1}, double, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned long>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#1})
ReduceNormKernel.cu	void at::native::reduce_kernel<128, 4, at::native::ReduceOp<c10::complex<double>, at::native::NormOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::NormOps<c10::complex<double>, double>, unsigned int, double, 4>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Sinh<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Sinh<c10::complex<double> >)
Col2Im.cu	void at::native::col2im_kernel<c10::Half, float>(long, c10::Half const*, long, long, long, long, long, long, long, long, long, long, long, long, long, c10::Half*)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<c10::Half, float, int, 1>(at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, int, int)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Cos<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Cos<c10::complex<float> >)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned int, -1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned int>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_backward_kernel<c10::Half, int>(int, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned long>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_kernel<c10::Half, long>(long, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
UnaryGammaKernels.cu	__cuda_sm3x_div_rn_noftz_f32
FractionalMaxPool2d.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<unsigned char, at::native::MaxOps<unsigned char>, unsigned int, unsigned char, 4> >(at::native::ReduceOp<unsigned char, at::native::MaxOps<unsigned char>, unsigned int, unsigned char, 4>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 2, 1, 1>, at::native::Cos<float> >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 2, 1, 1>, at::native::Cos<float>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned int, 2, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned int>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
Distributions.cu	void at::native::vectorized_elementwise_kernel<4, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3> >(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned int, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned int>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned long, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned long>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned int, 2, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned int>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ForeachBinaryOpScalar.cu	__cuda_sm3x_div_rn_noftz_f32
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_backward<float, float, long, 2>(at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, long, long)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned int, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned int>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<double>, at::native::AbsMinOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::AbsMinOps<c10::complex<double>, double>, unsigned int, double, 4>)
UnaryOpsKernel.cu	__cuda_sm3x_div_rn_noftz_f32
ReduceLogicKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#18}::operator()() const::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, bool, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#18}::operator()() const::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, bool, 4>)
RangeFactories.cu	void (anonymous namespace)::elementwise_kernel_with_index<int, at::native::logspace_cuda_out(at::Tensor&, c10::Scalar, c10::Scalar, c10::optional<long>, double)::{lambda()#3}::operator()() const::{lambda()#8}::operator()() const::{lambda(long)#1}>(int, at::native::logspace_cuda_out(at::Tensor&, c10::Scalar, c10::Scalar, c10::optional<long>, double)::{lambda()#3}::operator()() const::{lambda()#8}::operator()() const::{lambda(long)#1}, function_traits<{lambda(long)#1}>::result_type*)
ReduceSumProdKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::sum_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::sum_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Cosh<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Cosh<c10::complex<float> >)
ForeachBinaryOpList.cu	__cuda_sm3x_div_rn_noftz_f32
DistributionCauchyKernel.cu	_ZN2at6native56_GLOBAL__N__32_DistributionCauchyKernel_cpp1_ii_3a9ae88243distribution_elementwise_grid_stride_kernelIdLi2EZNS0_9templates4cuda21uniform_and_transformIddLm4EPNS_17CUDAGeneratorImplEZZZNS4_13cauchy_kernelIS7_EEvRNS_14TensorIteratorEddT_ENKUlvE_clEvENKUlvE0_clEvEUldE_EEvSA_T2_T3_EUlP24curandStatePhilox4_32_10E_ZNS1_27distribution_nullary_kernelIddLi2ES7_SJ_SE_EEvSA_SF_RKSG_T4_EUlidE_EEviNS_15PhiloxCudaStateET1_SF_
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceSumProdKernel.cu	void at::native::reduce_kernel<128, 4, at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::sum_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::sum_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4>)
ReduceNormKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<c10::complex<double>, at::native::AbsMaxOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::AbsMaxOps<c10::complex<double>, double>, unsigned int, double, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned int, -1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned int, 2, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned int>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::Half, at::native::MaxOps<c10::Half>, unsigned int, c10::Half, 4> >(at::native::ReduceOp<c10::Half, at::native::MaxOps<c10::Half>, unsigned int, c10::Half, 4>)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast)
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_forward<float, float, long, 2>(at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, long, long)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned int, 2, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned int>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
Distributions.cu	void at::native::vectorized_elementwise_kernel<4, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3> >(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Atan<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Atan<c10::complex<float> >)
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<float>, at::native::NormOneOps<c10::complex<float>, float>, unsigned int, float, 4> >(at::native::ReduceOp<c10::complex<float>, at::native::NormOneOps<c10::complex<float>, float>, unsigned int, float, 4>)
RangeFactories.cu	__internal_trig_reduction_slowpathd
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Atan<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Atan<c10::complex<float> >)
RangeFactories.cu	void (anonymous namespace)::elementwise_kernel_with_index<long, at::native::logspace_cuda_out(at::Tensor&, c10::Scalar, c10::Scalar, c10::optional<long>, double)::{lambda()#3}::operator()() const::{lambda()#6}::operator()() const::{lambda(long)#1}>(long, at::native::logspace_cuda_out(at::Tensor&, c10::Scalar, c10::Scalar, c10::optional<long>, double)::{lambda()#3}::operator()() const::{lambda()#6}::operator()() const::{lambda(long)#1}, function_traits<{lambda(long)#1}>::result_type*)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned int, 2, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned int>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned long>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
Distributions.cu	void at::native::vectorized_elementwise_kernel<2, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3> >(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Sinh<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Sinh<c10::complex<float> >)
SummaryOps.cu	__cuda_sm3x_div_rn_noftz_f32
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4>, TrivialOffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<3>, TrivialOffsetCalculator::StoreWithCast>(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4>, TrivialOffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<3>, TrivialOffsetCalculator::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned int, 1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned int>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
DistributionGeometricKernel.cu	__cuda_sm3x_div_rn_noftz_f32
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<short, at::native::MaxOps<short>, unsigned int, short, 4> >(at::native::ReduceOp<short, at::native::MaxOps<short>, unsigned int, short, 4>)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<short, at::native::ArgMinOps<short>, unsigned int, long, 4> >(at::native::ReduceOp<short, at::native::ArgMinOps<short>, unsigned int, long, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned int, 2, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned int>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#1}, short, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned long>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<int, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#1})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#1}, int, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned long>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#1})
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4>, TrivialOffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast>(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4>, TrivialOffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast)
BinaryMulDivKernel.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
Distributions.cu	void at::native::vectorized_elementwise_kernel<4, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4> >(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned int, 2, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned int>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned long>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_kernel<float, long>(long, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<double, at::native::MinMaxOps<double, double, int>, unsigned int, double, 4> >(at::native::ReduceOp<double, at::native::MinMaxOps<double, double, int>, unsigned int, double, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IGammaKernel.cu	float (anonymous namespace)::calc_igamma<float>(float, float)
AveragePool2d.cu	__cuda_sm3x_div_rn_noftz_f32
ComplexKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast>(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<float, float, long, 2>(at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, long, long)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4>, OffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast>(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4>, OffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast)
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<double>, at::native::AbsMaxOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::AbsMaxOps<c10::complex<double>, double>, unsigned int, double, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#1}, long, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned long>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<int, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#1})
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_kernel<double, int>(int, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
Loss.cu	__cuda_sm3x_div_rn_noftz_f32
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned int, -1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned int>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<float, float, long, 1>(at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, long, long)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 1, 1, 0>, at::native::Tan<double> >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 1, 1, 0>, at::native::Tan<double>)
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 2, 1, 1>, at::native::Tan<float> >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 2, 1, 1>, at::native::Tan<float>)
Distributions.cu	void at::native::vectorized_elementwise_kernel<4, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4> >(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Exp<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Exp<c10::complex<double> >)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<double>, at::native::NormZeroOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::NormZeroOps<c10::complex<double>, double>, unsigned int, double, 4>)
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<double>, at::native::NormOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::NormOps<c10::complex<double>, double>, unsigned int, double, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned int, 1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned int>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Acos<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Acos<c10::complex<double> >)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Acos<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Acos<c10::complex<float> >)
ReduceLogicKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<bool, at::native::or_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#18}::operator()() const::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, bool, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<bool, at::native::or_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#18}::operator()() const::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, bool, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned long>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_3d_backward_kernel<float, long>(long, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::ArgMinOps<float>, unsigned int, long, 4> >(at::native::ReduceOp<float, at::native::ArgMinOps<float>, unsigned int, long, 4>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 1, 1, 0>, at::native::Cos<float> >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 1, 1, 0>, at::native::Cos<float>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<unsigned char, at::native::ArgMaxOps<unsigned char>, unsigned int, long, 4> >(at::native::ReduceOp<unsigned char, at::native::ArgMaxOps<unsigned char>, unsigned int, long, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned long, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned long>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_backward<c10::Half, float, long, 2>(at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, long, long)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<float>, at::native::NormTwoOps<c10::complex<float>, float>, unsigned int, float, 4> >(at::native::ReduceOp<c10::complex<float>, at::native::NormTwoOps<c10::complex<float>, float>, unsigned int, float, 4>)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<int, at::native::MaxOps<int>, unsigned int, int, 4> >(at::native::ReduceOp<int, at::native::MaxOps<int>, unsigned int, int, 4>)
Col2Im.cu	void at::native::col2im_kernel<double, double>(long, double const*, long, long, long, long, long, long, long, long, long, long, long, long, long, double*)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<long, at::native::MinMaxOps<long, long, int>, unsigned int, long, 4> >(at::native::ReduceOp<long, at::native::MinMaxOps<long, long, int>, unsigned int, long, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
Col2Im.cu	void at::native::col2im_kernel<c10::complex<double>, c10::complex<double> >(long, c10::complex<double> const*, long, long, long, long, long, long, long, long, long, long, long, long, long, c10::complex<double>*)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned int, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned int>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceMomentKernel.cu	__cuda_sm3x_div_rn_noftz_f32
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#1}, double, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned long>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<int, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#1})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
ComplexKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>)
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_forward<float, float, int, 2>(at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, int, int)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned int, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned int>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
RangeFactories.cu	__cuda_sm3x_div_rn_noftz_f32
ReduceMomentKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<c10::complex<double>, at::native::MeanOps<c10::complex<double>, double>, unsigned int, c10::complex<double>, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::MeanOps<c10::complex<double>, double>, unsigned int, c10::complex<double>, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
AdaptiveMaxPooling3d.cu	__cuda_sm3x_div_rn_noftz_f32
ReduceNormKernel.cu	void at::native::reduce_kernel<128, 4, at::native::ReduceOp<c10::complex<double>, at::native::AbsMinOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::AbsMinOps<c10::complex<double>, double>, unsigned int, double, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned int, 1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned int>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Exp<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Exp<c10::complex<float> >)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<double, at::native::ArgMaxOps<double>, unsigned int, long, 4> >(at::native::ReduceOp<double, at::native::ArgMaxOps<double>, unsigned int, long, 4>)
DistributionExponentialKernel.cu	__cuda_sm3x_div_rn_noftz_f32
UpSampleTrilinear3d.cu	void at::native::(anonymous namespace)::upsample_trilinear3d_out_frame<c10::Half, float>(int, float, float, float, bool, at::GenericPackedTensorAccessor<c10::Half, 5ul, at::DefaultPtrTraits, long>, at::GenericPackedTensorAccessor<c10::Half, 5ul, at::DefaultPtrTraits, long>)
Distributions.cu	void at::native::vectorized_elementwise_kernel<2, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3> >(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3>)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_kernel<float, int>(int, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
ComplexKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast>(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned int, -1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned int>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
GridSampler.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<double, at::native::ArgMinOps<double>, unsigned int, long, 4> >(at::native::ReduceOp<double, at::native::ArgMinOps<double>, unsigned int, long, 4>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::MaxOps<long>, unsigned int, long, 4> >(at::native::ReduceOp<long, at::native::MaxOps<long>, unsigned int, long, 4>)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Asin<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Asin<c10::complex<float> >)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<int, at::native::ArgMinOps<int>, unsigned int, long, 4> >(at::native::ReduceOp<int, at::native::ArgMinOps<int>, unsigned int, long, 4>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<double, double, int, 2>(at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, int, int)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 1, 1, 0>, at::native::Sin<float> >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 1, 1, 0>, at::native::Sin<float>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Tan<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Tan<c10::complex<float> >)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 1, 1, 0>, at::native::Tan<float> >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 1, 1, 0>, at::native::Tan<float>)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned int, 2, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned int>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
IGammaKernel.cu	double (anonymous namespace)::calc_igamma<double>(double, double)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ComplexKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast>(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4>, TrivialOffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<3>, TrivialOffsetCalculator::StoreWithCast>(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4>, TrivialOffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<3>, TrivialOffsetCalculator::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#1}, signed char, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned long>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<int, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#1})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned long>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<int, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
PowKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::MinMaxOps<long, long, int>, unsigned int, long, 4> >(at::native::ReduceOp<long, at::native::MinMaxOps<long, long, int>, unsigned int, long, 4>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
ComplexKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast>(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast)
Distributions.cu	void at::native::vectorized_elementwise_kernel<2, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4> >(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<double, double, int, 1>(at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, int, int)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_kernel<c10::Half, int>(int, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
BinaryMiscBackwardOpsKernels.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGammaKernels.cu	__internal_lgamma_pos
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_backward_kernel<c10::Half, long>(long, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<bool, at::native::MaxOps<bool>, unsigned int, bool, 4> >(at::native::ReduceOp<bool, at::native::MaxOps<bool>, unsigned int, bool, 4>)
BinaryGeometricKernels.cu	__cuda_sm3x_div_rn_noftz_f32
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<short, at::native::MinOps<short>, unsigned int, short, 4> >(at::native::ReduceOp<short, at::native::MinOps<short>, unsigned int, short, 4>)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#1}, int, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned long>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<int, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#1})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Acos<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Acos<c10::complex<float> >)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned int, 1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned int>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned long>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<int, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
NaiveDilatedConvolution.cu	void at::native::col2im_kernel<c10::BFloat16, c10::BFloat16>(long, c10::BFloat16 const*, long, long, long, long, long, long, long, long, long, long, long, long, long, c10::BFloat16*)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned long>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<int, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned int, 2, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned int>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceNormKernel.cu	void at::native::reduce_kernel<128, 4, at::native::ReduceOp<c10::complex<double>, at::native::AbsMaxOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::AbsMaxOps<c10::complex<double>, double>, unsigned int, double, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
PointwiseOpsKernel.cu	__cuda_sm3x_div_rn_noftz_f32
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_backward<c10::Half, float, long, 2>(at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, long, long)
UnaryOpsKernel.cu	__internal_trig_reduction_slowpathd
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast>(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#1}, float, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned long>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<int, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#1})
PowKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3>)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceSumProdKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::sum_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::sum_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4>)
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<float>, at::native::NormOps<c10::complex<float>, float>, unsigned int, float, 4> >(at::native::ReduceOp<c10::complex<float>, at::native::NormOps<c10::complex<float>, float>, unsigned int, float, 4>)
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<double, at::native::NormOps<double, double>, unsigned int, double, 4> >(at::native::ReduceOp<double, at::native::NormOps<double, double>, unsigned int, double, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ComplexKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast>(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast)
UpSampleBicubic2d.cu	void at::native::(anonymous namespace)::upsample_bicubic2d_backward_out_frame<double, double>(int, double, double, bool, at::GenericPackedTensorAccessor<double, 4ul, at::DefaultPtrTraits, long>, at::GenericPackedTensorAccessor<double, 4ul, at::DefaultPtrTraits, long>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned int, -1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned int>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
ComplexKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Tanh<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Tanh<c10::complex<float> >)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<float>, at::native::AbsMaxOps<c10::complex<float>, float>, unsigned int, float, 4> >(at::native::ReduceOp<c10::complex<float>, at::native::AbsMaxOps<c10::complex<float>, float>, unsigned int, float, 4>)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<double, at::native::ArgMinOps<double>, unsigned int, long, 4> >(at::native::ReduceOp<double, at::native::ArgMinOps<double>, unsigned int, long, 4>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Asin<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Asin<c10::complex<double> >)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceNormKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<c10::complex<double>, at::native::NormOneOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::NormOneOps<c10::complex<double>, double>, unsigned int, double, 4>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<double, at::native::MinMaxOps<double, double, int>, unsigned int, double, 4> >(at::native::ReduceOp<double, at::native::MinMaxOps<double, double, int>, unsigned int, double, 4>)
PowKernel.cu	__cuda_sm3x_div_rn_noftz_f32
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned int, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned int>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
BinaryMiscOpsKernels.cu	__cuda_sm3x_div_rn_noftz_f32
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 1, 1, 0>, at::native::Cos<double> >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 1, 1, 0>, at::native::Cos<double>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned int, 2, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned int>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
Distributions.cu	void at::native::vectorized_elementwise_kernel<4, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3> >(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>)
Distributions.cu	void at::native::vectorized_elementwise_kernel<2, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4> >(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Sin<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Sin<c10::complex<double> >)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned int, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned int>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<c10::Half, float, int, 2>(at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, int, int)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_3d_backward_kernel<c10::Half, int>(int, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::cuda::detail::TensorInfo<c10::Half, int>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<float>, at::native::AbsMinOps<c10::complex<float>, float>, unsigned int, float, 4> >(at::native::ReduceOp<c10::complex<float>, at::native::AbsMinOps<c10::complex<float>, float>, unsigned int, float, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned long>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
Distributions.cu	void at::native::vectorized_elementwise_kernel<2, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3> >(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Sinh<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Sinh<c10::complex<double> >)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Cosh<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Cosh<c10::complex<double> >)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned int, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned int>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
ReduceMomentKernel.cu	void at::native::reduce_kernel<128, 4, at::native::ReduceOp<c10::complex<double>, at::native::MeanOps<c10::complex<double>, double>, unsigned int, c10::complex<double>, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::MeanOps<c10::complex<double>, double>, unsigned int, c10::complex<double>, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned int, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned int>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned long>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<int, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<double, at::native::MaxOps<double>, unsigned int, double, 4> >(at::native::ReduceOp<double, at::native::MaxOps<double>, unsigned int, double, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned int, -1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned int, -1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned int>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::ArgMinOps<long>, unsigned int, long, 4> >(at::native::ReduceOp<long, at::native::ArgMinOps<long>, unsigned int, long, 4>)
PowKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_backward<double, double, long, 2>(at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, long, long)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::BFloat16, at::native::MinOps<c10::BFloat16>, unsigned int, c10::BFloat16, 4> >(at::native::ReduceOp<c10::BFloat16, at::native::MinOps<c10::BFloat16>, unsigned int, c10::BFloat16, 4>)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Sin<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Sin<c10::complex<double> >)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_backward<float, float, long, 2>(at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, long, long)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<unsigned char, at::native::ArgMinOps<unsigned char>, unsigned int, long, 4> >(at::native::ReduceOp<unsigned char, at::native::ArgMinOps<unsigned char>, unsigned int, long, 4>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Sin<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Sin<c10::complex<float> >)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned int, 2, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned int>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
UnaryComplexKernels.cu	__cuda_sm3x_div_rn_noftz_f32
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Atan<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Atan<c10::complex<double> >)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned int, 2, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned int>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#1}, c10::Half, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned long>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<int, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#1})
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Cos<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Cos<c10::complex<double> >)
ForeachPointwiseOp.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
AdaptiveAveragePooling3d.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned long, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned long>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Tan<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Tan<c10::complex<double> >)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 2, 1, 1>, at::native::Tan<double> >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 2, 1, 1>, at::native::Tan<double>)
NaiveConvolutionTranspose2d.cu	void at::native::col2im_kernel<c10::BFloat16, float>(long, c10::BFloat16 const*, long, long, long, long, long, long, long, long, long, long, long, long, long, c10::BFloat16*)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::BFloat16, 2, 1, 1>, at::native::Cos<float> >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::BFloat16, 2, 1, 1>, at::native::Cos<float>)
Distributions.cu	__internal_trig_reduction_slowpathd
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<double>, at::native::NormOneOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::NormOneOps<c10::complex<double>, double>, unsigned int, double, 4>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_forward<c10::Half, float, long, 1>(at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, long, long)
ComplexKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast>(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned int, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned int>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned long, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned long>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 2, 1, 1>, at::native::Cos<double> >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 2, 1, 1>, at::native::Cos<double>)
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_forward<c10::Half, float, long, 2>(at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, long, long)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceSumProdKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::prod_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::prod_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned int, 2, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned int>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IGammaKernel.cu	double (anonymous namespace)::calc_igammac<double>(double, double)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned int, 1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned int>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned long>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned long, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned long>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned int, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned int>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned int, 1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned int>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned int, -1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned int>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
UnaryLogKernels.cu	__cuda_sm3x_div_rn_noftz_f32
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast>(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::Half, at::native::ArgMinOps<float>, unsigned int, long, 4> >(at::native::ReduceOp<c10::Half, at::native::ArgMinOps<float>, unsigned int, long, 4>)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
Distributions.cu	void at::native::vectorized_elementwise_kernel<2, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3> >(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3>)
Dropout.cu	void at::native::(anonymous namespace)::fused_dropout_kernel<double, double, unsigned long, -1, -1>(at::cuda::detail::TensorInfo<double, unsigned long>, at::cuda::detail::TensorInfo<double, unsigned long>, at::cuda::detail::TensorInfo<unsigned char, unsigned long>, unsigned long, double, at::PhiloxCudaState)
NaiveDilatedConvolution.cu	void at::native::col2im_kernel<double, double>(long, double const*, long, long, long, long, long, long, long, long, long, long, long, long, long, double*)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_3d_backward_kernel<double, long>(long, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
UpSampleTrilinear3d.cu	void at::native::(anonymous namespace)::upsample_trilinear3d_backward_out_frame<double, double>(int, double, double, double, bool, at::GenericPackedTensorAccessor<double, 5ul, at::DefaultPtrTraits, long>, at::GenericPackedTensorAccessor<double, 5ul, at::DefaultPtrTraits, long>, double*)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IGammaKernel.cu	__internal_lgamma_pos
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ReduceMomentKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<double>, at::native::MeanOps<c10::complex<double>, double>, unsigned int, c10::complex<double>, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::MeanOps<c10::complex<double>, double>, unsigned int, c10::complex<double>, 4>)
ReduceNormKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<c10::complex<double>, at::native::NormOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::NormOps<c10::complex<double>, double>, unsigned int, double, 4>)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<c10::Half, float, long, 2>(at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, long, long)
UpSampleBicubic2d.cu	void at::native::(anonymous namespace)::upsample_bicubic2d_out_frame<double, double>(int, double, double, bool, at::GenericPackedTensorAccessor<double, 4ul, at::DefaultPtrTraits, long>, at::GenericPackedTensorAccessor<double, 4ul, at::DefaultPtrTraits, long>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned int, -1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned int>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned long, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned long>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
AdaptiveAveragePooling.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned int, 1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned int>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_forward<double, double, int, 2>(at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, int, int)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned int, 2, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned int>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_forward<double, double, int, 1>(at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, int, int)
PowKernel.cu	__internal_trig_reduction_slowpathd
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned int, -1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned int>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned int, 1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned int>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
DistanceKernel.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned int, 1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned int>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_forward<float, float, long, 1>(at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, at::cuda::detail::TensorInfo<float, long>, long, long)
ReduceNormKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::complex<double>, at::native::NormTwoOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::NormTwoOps<c10::complex<double>, double>, unsigned int, double, 4>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 2, 1, 1>, at::native::Sin<float> >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 2, 1, 1>, at::native::Sin<float>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Tanh<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Tanh<c10::complex<float> >)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned int, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned int>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
ComplexKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast>(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned int, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned int>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
ForeachUnaryOp.cu	__internal_trig_reduction_slowpathd
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<float, float, int, 1>(at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, int, int)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Cos<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Cos<c10::complex<double> >)
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<double, at::native::ArgMaxOps<double>, unsigned int, long, 4> >(at::native::ReduceOp<double, at::native::ArgMaxOps<double>, unsigned int, long, 4>)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2}, unsigned char, long, unsigned int, -1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned int>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned int, 1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
PowKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned long, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned long>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 1, 1, 0>, at::native::Cos<float> >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 1, 1, 0>, at::native::Cos<float>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned long>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<int, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
FractionalMaxPool3d.cu	__cuda_sm3x_div_rn_noftz_f32
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Tan<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Tan<c10::complex<float> >)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned int, 2, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned int>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
RNN.cu	void at::native::(anonymous namespace)::kernel::gru_cell_backward<double, double, long, 2>(at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, long, long)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Tanh<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Tanh<c10::complex<double> >)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast)
Distributions.cu	__cuda_sm3x_div_rn_noftz_f32
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 2, 1, 1>, at::native::Sin<double> >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<double, 2, 1, 1>, at::native::Sin<double>)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_3d_backward_kernel<double, int>(int, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_3d_kernel<double, int>(int, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::cuda::detail::TensorInfo<double, int>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
ReduceMomentKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::WelfordOps<float, float, int, float, thrust::pair<float, float> >, unsigned int, float, 2> >(at::native::ReduceOp<float, at::native::WelfordOps<float, float, int, float, thrust::pair<float, float> >, unsigned int, float, 2>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_3d_backward_kernel<c10::Half, long>(long, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::cuda::detail::TensorInfo<c10::Half, long>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceMomentKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::BFloat16, at::native::WelfordOps<c10::BFloat16, float, int, float, thrust::pair<c10::BFloat16, c10::BFloat16> >, unsigned int, c10::BFloat16, 2> >(at::native::ReduceOp<c10::BFloat16, at::native::WelfordOps<c10::BFloat16, float, int, float, thrust::pair<c10::BFloat16, c10::BFloat16> >, unsigned int, c10::BFloat16, 2>)
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2> >(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned long, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned long>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
UnaryGammaKernels.cu	__internal_trig_reduction_slowpathd
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned int, 2, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned int>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::exp_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
SoftMax.cu	__cuda_sm3x_div_rn_noftz_f32
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Sin<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Sin<c10::complex<float> >)
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned int, 1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned int>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<long, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast>(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Asin<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Asin<c10::complex<double> >)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
NaiveConvolutionTranspose2d.cu	void at::native::col2im_kernel<double, double>(long, double const*, long, long, long, long, long, long, long, long, long, long, long, long, long, double*)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::Half, at::native::MinOps<c10::Half>, unsigned int, c10::Half, 4> >(at::native::ReduceOp<c10::Half, at::native::MinOps<c10::Half>, unsigned int, c10::Half, 4>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::ArgMaxOps<float>, unsigned int, long, 4> >(at::native::ReduceOp<float, at::native::ArgMaxOps<float>, unsigned int, long, 4>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Acos<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Acos<c10::complex<double> >)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_kernel<double, long>(long, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
UpSampleTrilinear3d.cu	void at::native::(anonymous namespace)::upsample_trilinear3d_out_frame<double, double>(int, double, double, double, bool, at::GenericPackedTensorAccessor<double, 5ul, at::DefaultPtrTraits, long>, at::GenericPackedTensorAccessor<double, 5ul, at::DefaultPtrTraits, long>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned int, 2, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned int>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
Col2Im.cu	void at::native::col2im_kernel<c10::complex<float>, c10::complex<float> >(long, c10::complex<float> const*, long, long, long, long, long, long, long, long, long, long, long, long, long, c10::complex<float>*)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2}, signed char, long, unsigned int, 2, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned int>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#2})
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 1, 1, 0>, at::native::Sin<float> >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::Half, 1, 1, 0>, at::native::Sin<float>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::atanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Tan<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 1, 1, 0>, at::native::Tan<c10::complex<double> >)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::acos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ComplexKernel.cu	void at::native::vectorized_elementwise_kernel<2, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Tanh<c10::complex<double> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<double>, 2, 1, 1>, at::native::Tanh<c10::complex<double> >)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::MinOps<long>, unsigned int, long, 4> >(at::native::ReduceOp<long, at::native::MinOps<long>, unsigned int, long, 4>)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_backward_kernel<double, long>(long, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
UpSampleTrilinear3d.cu	void at::native::(anonymous namespace)::upsample_trilinear3d_out_frame<float, float>(int, float, float, float, bool, at::GenericPackedTensorAccessor<float, 5ul, at::DefaultPtrTraits, long>, at::GenericPackedTensorAccessor<float, 5ul, at::DefaultPtrTraits, long>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<unsigned char, at::native::MinOps<unsigned char>, unsigned int, unsigned char, 4> >(at::native::ReduceOp<unsigned char, at::native::MinOps<unsigned char>, unsigned int, unsigned char, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned int, -1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned int>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast>(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned int, -1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned int>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, OffsetCalculator::StoreWithCast)
ComplexKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast>(int, at::native::(anonymous namespace)::polar_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned int, 2, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::cosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryFractionKernels.cu	__cuda_sm3x_div_rn_noftz_f32
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned int, 1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned int>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
ReduceSumProdKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::prod_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::func_wrapper_t<c10::complex<double>, at::native::prod_functor<c10::complex<double>, c10::complex<double>, c10::complex<double> >::operator()(at::TensorIterator&)::{lambda(c10::complex<double>, c10::complex<double>)#1}>, unsigned int, c10::complex<double>, 4>)
ReduceNormKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<double, at::native::NormOps<double, double>, unsigned int, double, 4> >(at::native::ReduceOp<double, at::native::NormOps<double, double>, unsigned int, double, 4>)
NaiveConvolutionTranspose2d.cu	void at::native::col2im_kernel<c10::Half, float>(long, c10::Half const*, long, long, long, long, long, long, long, long, long, long, long, long, long, c10::Half*)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
RangeFactories.cu	void (anonymous namespace)::elementwise_kernel_with_index<int, at::native::logspace_cuda_out(at::Tensor&, c10::Scalar, c10::Scalar, c10::optional<long>, double)::{lambda()#3}::operator()() const::{lambda()#6}::operator()() const::{lambda(long)#1}>(int, at::native::logspace_cuda_out(at::Tensor&, c10::Scalar, c10::Scalar, c10::optional<long>, double)::{lambda()#3}::operator()() const::{lambda()#6}::operator()() const::{lambda(long)#1}, function_traits<{lambda(long)#1}>::result_type*)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned int, -1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned int>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
MultinomialKernel.cu	__cuda_sm3x_div_rn_noftz_f32
Distributions.cu	void at::native::vectorized_elementwise_kernel<4, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3> >(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::BFloat16, {lambda()#8})#1}, at::detail::Array<char*, 3>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#1}, bool, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned long>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#1})
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<signed char, at::native::ArgMinOps<signed char>, unsigned int, long, 4> >(at::native::ReduceOp<signed char, at::native::ArgMinOps<signed char>, unsigned int, long, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2}, c10::Half, long, unsigned int, 1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned int>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2}, short, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<short, unsigned long>, at::cuda::detail<long, short>, short, at::native::dispatchTakePutImpl<int, short>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(short&, long const&)#2})
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MaxOps<float>, unsigned int, float, 4> >(at::native::ReduceOp<float, at::native::MaxOps<float>, unsigned int, float, 4>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<int, at::native::ArgMaxOps<int>, unsigned int, long, 4> >(at::native::ReduceOp<int, at::native::ArgMaxOps<int>, unsigned int, long, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<float, float, int, 2>(at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, int, int)
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast>(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
RNN.cu	void at::native::(anonymous namespace)::kernel::lstm_cell_forward<double, double, long, 1>(at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, long, long)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
UnaryOpsKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Cosh<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Cosh<c10::complex<float> >)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2}, long, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<long, unsigned long>, at::cuda::detail<long, long>, long, at::native::dispatchTakePutImpl<long, long>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(long&, long const&)#2})
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::(anonymous namespace)::pow_tensor_scalar_kernel(at::TensorIterator&, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<bool, at::native::MinOps<bool>, unsigned int, bool, 4> >(at::native::ReduceOp<bool, at::native::MinOps<bool>, unsigned int, bool, 4>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::acosh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned int, 2, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned int, 2, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned int>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2}, bool, long, unsigned int, -1, 1, 1, 512, 4>(at::cuda::detail::TensorInfo<bool, unsigned int>, at::cuda::detail<long, bool>, bool, at::native::dispatchTakePutImpl<long, bool>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(bool&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2> >(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<int, at::native::MinOps<int>, unsigned int, int, 4> >(at::native::ReduceOp<int, at::native::MinOps<int>, unsigned int, int, 4>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2}, double, long, unsigned int, -1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<double, unsigned int>, at::cuda::detail<long, double>, double, at::native::dispatchTakePutImpl<long, double>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(double&, long const&)#2})
ReduceNormKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<c10::complex<double>, at::native::NormTwoOps<c10::complex<double>, double>, unsigned int, double, 4> >(at::native::ReduceOp<c10::complex<double>, at::native::NormTwoOps<c10::complex<double>, double>, unsigned int, double, 4>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned int, 2, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned int>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
BinaryShiftOpsKernels.cu	__cuda_sm3x_div_rn_noftz_f32
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<256, 2, at::native::ReduceOp<double, at::native::MaxOps<double>, unsigned int, double, 4> >(at::native::ReduceOp<double, at::native::MaxOps<double>, unsigned int, double, 4>)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::digamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast>(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast)
PowKernel.cu	void at::native::unrolled_elementwise_kernel<at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast>(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::complex<double>, c10)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, TrivialOffsetCalculator::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	__cuda_sm3x_div_rn_noftz_f32
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2> >(int, at::native::asinh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>)
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Sinh<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<1>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 1, 1, 0>, at::native::Sinh<c10::complex<float> >)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#1}, signed char, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<signed char, unsigned long>, at::cuda::detail<long, signed char>, signed char, at::native::dispatchTakePutImpl<long, signed char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(signed char&, long const&)#1})
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::asin_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tanh_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ForeachUnaryOp.cu	__internal_lgamma_pos
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#1}, unsigned char, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<unsigned char, unsigned long>, at::cuda::detail<long, unsigned char>, unsigned char, at::native::dispatchTakePutImpl<long, unsigned char>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(unsigned char&, long const&)#1})
Col2Im.cu	void at::native::col2im_kernel<float, float>(long, float const*, long, long, long, long, long, long, long, long, long, long, long, long, long, float*)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4>, OffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<3>, OffsetCalculator::StoreWithCast>(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double, double)#1}, at::detail::Array<char*, 4>, OffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<3>, OffsetCalculator::StoreWithCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#1}, c10::Half, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<c10::Half, unsigned long>, at::cuda::detail<long, c10::Half>, c10::Half, at::native::dispatchTakePutImpl<long, c10::Half>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(c10::Half&, long const&)#1})
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4>, OffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<3>, OffsetCalculator::StoreWithCast>(int, at::native::_dirichlet_grad_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float)#1}, at::detail::Array<char*, 4>, OffsetCalculator<3, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<3>, OffsetCalculator::StoreWithCast)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_3d_kernel<double, long>(long, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::cuda::detail::TensorInfo<double, long>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Cos<c10::complex<float> > >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<c10::complex<float>, 2, 1, 1>, at::native::Cos<c10::complex<float> >)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
ForeachUnaryOp.cu	void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 2, 1, 1>, at::native::Tan<float> >(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::UnaryOpFunctor<float, 2, 1, 1>, at::native::Tan<float>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::sin_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::complex<double>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
ReduceMomentKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::Half, at::native::WelfordOps<c10::Half, float, int, float, thrust::pair<c10::Half, c10::Half> >, unsigned int, c10::Half, 2> >(at::native::ReduceOp<c10::Half, at::native::WelfordOps<c10::Half, float, int, float, thrust::pair<c10::Half, c10::Half> >, unsigned int, c10::Half, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<int, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned long, -1, -1, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned long>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<int, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
NaiveDilatedConvolution.cu	void at::native::col2im_kernel<c10::Half, c10::Half>(long, c10::Half const*, long, long, long, long, long, long, long, long, long, long, long, long, long, c10::Half*)
UnaryGammaKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double)#1}, at::detail::Array<char*, 2>, OffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryOpsKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::sinc_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	__internal_trig_reduction_slowpathd
ComplexKernel.cu	__internal_trig_reduction_slowpathd
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half, {lambda()#6})#1}, at::detail::Array<char*, 3>, OffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithoutCast, OffsetCalculator::StoreWithoutCast)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2}, float, long, unsigned int, 2, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail<long, float>, float, at::native::dispatchTakePutImpl<long, float>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(float&, long const&)#2})
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::BFloat16, at::native::MaxOps<c10::BFloat16>, unsigned int, c10::BFloat16, 4> >(at::native::ReduceOp<c10::BFloat16, at::native::MaxOps<c10::BFloat16>, unsigned int, c10::BFloat16, 4>)
ReduceMinMaxKernel.cu	void at::native::reduce_kernel<512, 1, at::native::ReduceOp<signed char, at::native::ArgMaxOps<signed char>, unsigned int, long, 4> >(at::native::ReduceOp<signed char, at::native::ArgMaxOps<signed char>, unsigned int, long, 4>)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<2, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast>(int, at::native::cos_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithoutCast, at::detail::Array<char*, 2>::StoreWithoutCast)
UnaryGeometricKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::tan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#10}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
DistributionCauchyKernel.cu	_ZN2at6native56_GLOBAL__N__32_DistributionCauchyKernel_cpp1_ii_3a9ae88243distribution_elementwise_grid_stride_kernelIdLi4EZNS0_9templates4cuda21uniform_and_transformIddLm4EPNS_17CUDAGeneratorImplEZZZNS4_13cauchy_kernelIS7_EEvRNS_14TensorIteratorEddT_ENKUlvE_clEvENKUlvE0_clEvEUldE_EEvSA_T2_T3_EUlP24curandStatePhilox4_32_10E0_ZNS1_27distribution_nullary_kernelIddLi4ES7_SJ_SE_EEvSA_SF_RKSG_T4_EUlidE_EEviNS_15PhiloxCudaStateET1_SF_
UnaryGeometricKernels.cu	void at::native::unrolled_elementwise_kernel<at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast>(int, at::native::atan_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::complex<float>)#1}, at::detail::Array<char*, 2>, TrivialOffsetCalculator<1, unsigned int>, char*, at::native::memory::LoadWithCast<1>, at::detail::Array<char*, 2>::StoreWithCast)
UnaryGammaKernels.cu	void at::native::vectorized_elementwise_kernel<4, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2> >(int, at::native::trigamma_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#6}::operator()() const::{lambda(c10::Half)#1}, at::detail::Array<char*, 2>)
IndexKernel.cu	void at::cuda::(anonymous namespace)::kernelPointwiseApply2<at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2}, int, long, unsigned int, -1, 2, 1, 512, 4>(at::cuda::detail::TensorInfo<int, unsigned int>, at::cuda::detail<long, int>, int, at::native::dispatchTakePutImpl<long, int>(at::Tensor const&, at::Tensor&, at::Tensor const&)::{lambda(int&, long const&)#2})
Distributions.cu	void at::native::unrolled_elementwise_kernel<at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast>(int, at::native::_standard_gamma_grad_cuda(at::Tensor const&, at::Tensor const&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(double, double)#1}, at::detail::Array<char*, 3>, TrivialOffsetCalculator<2, unsigned int>, at::detail::Array<1, unsigned int>, at::native::memory::LoadWithCast<2>, TrivialOffsetCalculator::StoreWithCast)
GridSampler.cu	void at::native::(anonymous namespace)::grid_sampler_2d_backward_kernel<float, int>(int, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::cuda::detail::TensorInfo<float, int>, at::native::detail::GridSamplerInterpolation, at::native::detail::GridSamplerPadding, bool)
PowKernel.cu	void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::pow_tensor_tensor_kernel(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#2}::operator()() const::{lambda(c10::complex<float>, c10)#1}, at::detail::Array<char*, 3>)